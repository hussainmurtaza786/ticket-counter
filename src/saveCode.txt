
 {/* Movie Data */}
 

  const formatDate = (isoString) => {
    const date = new Date(isoString);
    return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;
  };
      <Grid templateColumns="repeat(3, 1fr)" gap={4}>
        {movieData &&
          movieData.map((movie) => (
            <Box
              key={movie.id}
              width="400px"
              m="16px 8px"
              border="2px dashed black"
              borderWidth="1px"
              borderRadius="lg"
              overflow="hidden"
              p={4}
              bg="white"
              shadow="md"
            >
              <VStack align="start" spacing={3}>
                <HStack>
                  <Text fontWeight="bold">Movie Name:</Text>
                  <Text>{movie.name}</Text>
                </HStack>
                <HStack>
                  <Text fontWeight="bold">Movie Genre:</Text>
                  <Text>{movie.genre}</Text>
                </HStack>
                <HStack>
                  <Text fontWeight="bold">Price:</Text>
                  <Text>{movie.price}</Text>
                </HStack>
                <HStack>
                  <Text fontWeight="bold">Date-Time:</Text>
                  <Text>{formatDate(movie.timestamp)}</Text>
                </HStack>
                <HStack>
                  <Text fontWeight="bold">Seat:</Text>
                  <Text>{movie.seat}</Text>
                </HStack>
              </VStack>
            </Box>
          ))}
      </Grid>




      
      {/* Transport Data */}
      <Grid templateColumns="repeat(3, 1fr)" gap={4}>
        {transportData &&
          transportData.map((transport) => (
            <Box
              key={transport.id}
              width="400px"
              m="16px 8px"
              border="2px dashed black"
              borderWidth="1px"
              borderRadius="lg"
              overflow="hidden"
              position="relative"
              bg="white"
              shadow="md"
            >
              <Image
                src={
                  transport.transportType === "plane"
                    ? "https://png.pngtree.com/thumb_back/fh260/background/20230805/pngtree-the-flight-path-on-both-sides-of-the-runway-image_12972430.jpg"
                    : transport.transportType === "bus"
                      ? "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT95AAuIODV91eecjsNyt7u86vRH7ohjyGtGQ&s"
                      : "https://c1.wallpaperflare.com/preview/10/22/374/airplane-plane-track-railway.jpg"
                }
                alt={transport.transportType}
                objectFit="cover"
                width="100%"
                height="100%"
                position="absolute"
                top="0"
                left="0"
                zIndex="0"
              />

              <VStack
                align="start"
                height="100%"
                spacing={3}
                position="relative"
                top="0"
                left="0"
                right="0"
                bottom="0"
                p={4}
                zIndex="1"
                color="white"
                bg="rgba(0, 0, 0, 0.5)"
              >
                <HStack>
                  <Text fontWeight="bold">Transport:</Text>
                  <Badge fontSize="13px" variant="outline" colorScheme="green">
                    {transport.transportType}
                  </Badge>
                </HStack>
                <HStack>
                  <Text fontWeight="bold">Name:</Text>
                  <Text>{transport.name}</Text>
                </HStack>
                <HStack>
                  <Text fontWeight="bold">Email:</Text>
                  <Text>{transport.email}</Text>
                </HStack>
                <HStack>
                  <Text fontWeight="bold">Passengers:</Text>
                  <Text>{transport.passengers}</Text>
                </HStack>

                {transport.transportType === "plane" && (
                  <>
                    <HStack>
                      <Text fontWeight="bold">Departure Airport:</Text>
                      <Text>{transport.depAirport}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Destination Airport:</Text>
                      <Text>{transport.desAirport}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Departure Date:</Text>
                      <Text>{transport.depDate}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Departure Time:</Text>
                      <Text>{transport.depTime}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Return Date:</Text>
                      <Text>{transport.returnDate}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Return Time:</Text>
                      <Text>{transport.returnTime}</Text>
                    </HStack>
                  </>
                )}
                {transport.transportType === "bus" && (
                  <>
                    <HStack>
                      <Text fontWeight="bold">Departure Location:</Text>
                      <Text>{transport.depLocation}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Destination Location:</Text>
                      <Text>{transport.desLocation}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Departure Date:</Text>
                      <Text>{transport.depDate}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Departure Time:</Text>
                      <Text>{transport.depTime}</Text>
                    </HStack>
                  </>
                )}
                {transport.transportType === "train" && (
                  <>
                    <HStack>
                      <Text fontWeight="bold">Departure Station:</Text>
                      <Text>{transport.depStation}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Destination Station:</Text>
                      <Text>{transport.desStation}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Departure Date:</Text>
                      <Text>{transport.depDate}</Text>
                    </HStack>
                    <HStack>
                      <Text fontWeight="bold">Departure Time:</Text>
                      <Text>{transport.depTime}</Text>
                    </HStack>
                  </>
                )}
              </VStack>
            </Box>
          ))}
      </Grid>